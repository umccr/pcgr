[{"path":"https://umccr.github.io/pcgr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Sigve Nakken Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"step-1-download-data-bundle","dir":"Articles","previous_headings":"","what":"STEP 1: Download data bundle","title":"Installation","text":"Download unpack human assembly-specific data bundle: grch37 data bundle - 20220119 (approx 20Gb) Unpacking: gzip -dc pcgr.databundle.grch3X.YYYYMMDD.tgz | tar xvf - produce data/ folder.","code":""},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"step-2-download-pcgr-github-repository","dir":"Articles","previous_headings":"","what":"STEP 2: Download PCGR GitHub repository","title":"Installation","text":"Download unpack latest software release https://github.com/sigven/pcgr/releases. Alternatively git installed, can :","code":"cd /Users/you/dir4 PCGR_VERSION=\"x.x.x\" git clone -b v${PCGR_VERSION} --depth 1 https://github.com/sigven/pcgr.git"},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"step-3-set-up-conda-or-docker","dir":"Articles","previous_headings":"","what":"STEP 3: Set up Conda or Docker","title":"Installation","text":"Step 3 depends want use Conda Docker: Conda, continue reading PCGR Conda setup. Docker, skip PCGR Docker setup.","code":""},{"path":[]},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"a-miniconda-and-mamba","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 1: Conda","what":"a) Miniconda and Mamba","title":"Installation","text":"Download install Miniconda installer https://docs.conda.io/en/latest/miniconda.html: Make sure download Linux MacOSX script according platform ’re currently . Run bash miniconda.sh follow prompts (okay accept defaults, unless want choose different installation location default ~/miniconda3). Exit current terminal session open new one. now notice something like (base) string prefix terminal prompt. means ’re base conda environment, ’re ready start installing conda environments PCGR. Install Mamba base environment, fast conda package installer.","code":"$ PLATFORM=\"MacOSX\" # or \"Linux\" $ wget https://repo.continuum.io/miniconda/Miniconda3-latest-${PLATFORM}-x86_64.sh -O miniconda.sh && chmod +x miniconda.sh $ bash miniconda.sh [... (safe to answer 'yes' to all prompts)] # exit terminal and open new one - you should now see: (base) $ (base) $ conda install -c conda-forge mamba [... (lots of messages)] (base) $ mamba --version mamba 0.17.0 conda 4.10.3"},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"b-create-pcgr-conda-environments","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 1: Conda","what":"b) Create PCGR conda environments","title":"Installation","text":"conda/env directory PCGR codebase contains two YAML files can used create required conda environments Python component (pcgr) R components (pcgrr (cpsr)). install conda dependencies two environments conda/env directory: process takes 10-15min installing scratch. end, can confirm conda environments installed correctly (notice paths different base env installation):","code":"cd /Users/you/dir4/pcgr PLATFORM=\"osx-64\" # or \"linux-64\" mamba create --prefix ./conda/env/pcgr --file conda/env/lock/pcgr-${PLATFORM}.lock mamba create --prefix ./conda/env/pcgrr --file conda/env/lock/pcgrr-${PLATFORM}.lock $ (base) conda env list # conda environments: # base    *  /Users/you/miniconda3 pcgr       /Users/you/dir4/pcgr/conda/env/pcgr pcgrr      /Users/you/dir4/pcgr/conda/env/pcgrr"},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"c-activate-pcgr-conda-environment","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 1: Conda","what":"c) Activate pcgr conda environment","title":"Installation","text":"need activate ./conda/env/pcgr conda environment, test works correctly e.g. pcgr --version: now set run PCGR! Continue STEP 4.","code":"$ cd /Users/you/dir4/pcgr (base) $ conda activate ./conda/env/pcgr # note how the full path to the locally installed conda environment is now displayed  (/Users/you/dir4/pcgr) $ which pcgr /Users/you/dir4/pcgr/conda/env/pcgr/bin/pcgr  (/Users/you/dir4/pcgr) $ pcgr --version pcgr 0.10.2  (/Users/you/dir4/pcgr) $ which pcgrr.R /Users/you/dir4/pcgr/conda/env/pcgr/bin/pcgrr.R"},{"path":[]},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"a-install-docker","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 2: Docker","what":"a) Install Docker","title":"Installation","text":"installing Docker, follow instructions https://docs.docker.com/engine/install/ Linux MacOSX machine. NOTE: able perform enough testing Windows platform, received feedback particular versions Docker/Windows work PCGR (example mounting data volumes). Test Docker running, e.g. typing docker ps docker images terminal window. Adjust computing resources dedicated Docker, .e.: Memory minimum 5GB, CPUs minimum 4 (see e.g. MacOSX).","code":""},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"b-download-pcgr-docker-image","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 2: Docker","what":"b) Download PCGR Docker Image","title":"Installation","text":"Pull PCGR Docker image DockerHub (approx 5.7Gb) : docker pull sigven/pcgr:vX.X.X","code":""},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"c-run-pcgr-docker-container-directly-recommended-or-indirectly","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 2: Docker","what":"c) Run PCGR Docker Container directly (recommended) or indirectly","title":"Installation","text":"next step depends familiar working Docker volumes (https://docs.docker.com/storage/volumes/). know use -v <host>:<container> Docker option, can use PCGR Docker image directly, involve set Python environment. Jump PCGR Docker direct setup details. Alternatively, can allow PCGR handle Docker volume setup intricacies, requires Python environment setup (can bit cumbersome ’re familiar conda virtualenv). Jump PCGR Docker indirect setup details.","code":""},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"directly","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 2: Docker > c) Run PCGR Docker Container directly (recommended) or indirectly","what":"Directly","title":"Installation","text":"’ll need map PCGR inputs Docker container paths. example, say input VCF sampleX.vcf.gz stored directory /Users//project1. need supply Docker --volume (-v) option mapping directory VCF directory inside Docker container, e.g. /home/input_vcf_dir. become: -v /Users//project1:/home/input_vcf_dir (note : separating directory container’s directory). command look something like : Note --no_docker option command. Since ’re running command directly inside container, need use option bypass indirect Docker PCGR run. Also note path mappings. ’re using container paths command, host (machine’s) paths.","code":"docker container run -it --rm \\     -v /Users/you/dir1/data:/root/pcgr_data \\     -v /Users/you/dir2/pcgr_inputs:/root/pcgr_inputs \\     -v /Users/you/dir3/pcgr_outputs:/root/pcgr_outputs \\     sigven/pcgr:v0.9.4 \\     pcgr \\       --input_vcf \"/root/pcgr_inputs/tumor_sample.BRCA.vcf.gz\" \\       --pcgr_dir \"/root/pcgr_data\" \\       --output_dir \"/root/pcgr_outputs\" \\       --genome_assembly \"grch38\" \\       --sample_id \"SampleB\" \\       --assay \"WGS\" \\       --vcf2maf \\       --no_docker"},{"path":"https://umccr.github.io/pcgr/articles/installation.html","id":"indirectly-not-recommended","dir":"Articles","previous_headings":"STEP 3: Set up Conda or Docker > Option 2: Docker > c) Run PCGR Docker Container directly (recommended) or indirectly","what":"Indirectly (not recommended)","title":"Installation","text":"Install PCGR Python component local machine. requirement Python > 3.6. strongly advise install virtual Python environment conda (virtualenv) (read previous sections install conda). else (probably) use system’s default Python ’ll end situation like https://xkcd.com/1987/. ’s example using conda/mamba, Python 3.7 dependency: now set run PCGR within pcgr_docker_env conda environment! ’s example command: Note specify --no_docker option. PCGR automatically look recent Docker container machine, run command inside indirectly. Also note path mappings. ’re using actual host (machine’s) paths, container paths.","code":"(base) $ mamba create -n pcgr_docker_env -c conda-forge python=3.7 (base) $ conda activate pcgr_docker_env  (pcgr_docker_env) $ which python /Users/you/miniconda3/envs/pcgr_docker_env/bin/python (pcgr_docker_env) $ cd /Users/you/dir4/pcgr  (pcgr_docker_env) $ pip install -e . Obtaining file:///Users/you/dir4/pcgr   Preparing metadata (setup.py) ... done Installing collected packages: pcgr   Running setup.py develop for pcgr Successfully installed pcgr-0.9.4  (pcgr_docker_env) $ which pcgr /Users/you/miniconda3/envs/pcgr_docker/bin/pcgr (pcgr_docker_env) $ pcgr --version pcgr 0.9.4 (pcgr_docker_env) $ pcgr \\   --input_vcf \"/Users/you/dir1/tumor_sample.BRCA.vcf.gz\" \\   --pcgr_dir \"/Users/you/dir2/data\" \\   --output_dir \"/Users/you/dir3/pcgr_outputs\" \\   --genome_assembly \"grch38\" \\   --sample_id \"SampleB\" \\   --assay \"WGS\""},{"path":"https://umccr.github.io/pcgr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sigve Nakken. Author, maintainer.","code":""},{"path":"https://umccr.github.io/pcgr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sigve Nakken, Ghislain Fournous, Daniel Vodák, Lars Birger Aaasheim, Ola Myklebost, Eivind Hovig. Personal Cancer Genome Reporter: variant interpretation report precision oncology (2017). Bioinformatics. 34(10):1778–1780. doi:10.1093/bioinformatics/btx817","code":"@Article{,   title = {Personal Cancer Genome Reporter: variant interpretation report for precision oncology},   author = {Sigve Nakken and Ghislain Fournous and Daniel Vodák and Lars Birger Aasheim and Ola Myklebost and Eivind Hovig},   journal = {Bioinformatics},   year = {2017},   month = {12},   volume = {34},   number = {10},   pages = {1778-1780},   url = {https://doi.org/10.1093/bioinformatics/btx817}, }"},{"path":"https://umccr.github.io/pcgr/index.html","id":"pcgr","dir":"","previous_headings":"","what":"Personal Cancer Genome ReporteR","title":"Personal Cancer Genome ReporteR","text":"Personal Cancer Genome Reporter (PCGR) stand-alone software package functional annotation translation individual cancer genomes precision cancer medicine. interprets somatic SNVs/InDels copy number aberrations. software extends basic gene variant annotations Ensembl’s Variant Effect Predictor (VEP) oncology-relevant, --date annotations retrieved flexibly vcfanno. Variants classified tiers clinical significance, interactive HTML output reports permits exploration final results. Example views dashboard HTML output:  PCGR developed scientists affiliated Norwegian Cancer Genomics Consortium, Institute Cancer Research/Oslo University Hospital.","code":""},{"path":"https://umccr.github.io/pcgr/index.html","id":"example-reports","dir":"","previous_headings":"","what":"Example reports","title":"Personal Cancer Genome ReporteR","text":"Cervical cancer sample (tumor-) Lung cancer sample (tumor-control) Breast cancer sample (tumor-control) Brain cancer sample (tumor-control) (view rmarkdown-based reports, simply remove .flexdb. file names flexdashboard reports)","code":""},{"path":"https://umccr.github.io/pcgr/index.html","id":"why-use-pcgr","dir":"","previous_headings":"","what":"Why use PCGR?","title":"Personal Cancer Genome ReporteR","text":"great complexity acquired mutations individual tumor genomes poses severe challenge clinical interpretation. general scarcity tools can ) systematically interrogate cancer genomes context diagnostic, prognostic, therapeutic biomarkers, ii) prioritize highlight important findings, iii) present results format accessible clinical experts. PCGR integrates comprehensive set knowledge resources related tumor biology therapeutic biomarkers, gene variant level. application generates tiered report aid interpretation individual cancer genomes clinical setting. use PCGR, please cite publication: Sigve Nakken, Ghislain Fournous, Daniel Vodák, Lars Birger Aaasheim, Ola Myklebost, Eivind Hovig. Personal Cancer Genome Reporter: variant interpretation report precision oncology (2017). Bioinformatics. 34(10):1778–1780. doi:[10.1093/bioinformatics/btx817](https://doi.org/10.1093/bioinformatics/btx817)","code":""},{"path":"https://umccr.github.io/pcgr/index.html","id":"docker-based-technology","dir":"","previous_headings":"","what":"Docker-based technology","title":"Personal Cancer Genome ReporteR","text":"PCGR workflow developed using Docker technology. software thus packaged isolated containers, installation software libraries/tools required dependencies taken care . addition bundled software, form Docker image, workflow needs attached annotation data bundle precision oncology.","code":""},{"path":"https://umccr.github.io/pcgr/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Personal Cancer Genome ReporteR","text":"sigven@ifi.uio.","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_annotation_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","title":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"Function appends multiple HTML annotation links variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_annotation_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"","code":"append_annotation_links(vcf_data_df, skip = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/append_annotation_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"vcf_data_df data frame variant entries skip elements ignored annotation","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_dbmts_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"Function adds miRNA target annotations (dbMTS) genetic variant identifiers","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_dbmts_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"","code":"append_dbmts_var_link(var_df)"},{"path":"https://umccr.github.io/pcgr/reference/append_dbmts_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"var_df data frame variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"Function assigns HTML links dbNSFP prediction entries","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"","code":"append_dbnsfp_var_link(var_df)"},{"path":"https://umccr.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"var_df data frame variant entries","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"var_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_drug_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","title":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","text":"Function adds HTML links different genetic variant identifiers","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_drug_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","text":"","code":"append_drug_var_link(var_df, pcgr_data = NULL, linktype = \"dbsource\")"},{"path":"https://umccr.github.io/pcgr/reference/append_drug_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","text":"var_df data frame variants pcgr_data PCGR data structure linktype type link","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"Function adds GWAS citation/phenotype GWAS hit found PCGR annotation","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"","code":"append_gwas_citation_phenotype(   vcf_data_df = NULL,   gwas_citations_phenotypes = NULL,   p_value_threshold = 1e-06 )"},{"path":"https://umccr.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"vcf_data_df Data frame sample variants VCF gwas_citations_phenotypes data frame variant-phenotype associations (including citations) GWAS p_value_threshold Required p-value report associations GWAS catalog","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"vcf_data_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_otargets_pheno_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","title":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","text":"Function adds HTML links different genetic variant identifiers","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_otargets_pheno_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","text":"","code":"append_otargets_pheno_link(   var_df,   pcgr_data = NULL,   oncotree = NULL,   linktype = \"dbsource\" )"},{"path":"https://umccr.github.io/pcgr/reference/append_otargets_pheno_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","text":"var_df data frame variants pcgr_data PCGR data structure oncotree Oncotree data frame linktype type link","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_pfeature_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"Function adds SwissProt feature descriptions based key identifiers coming PCGR pipeline","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_pfeature_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"","code":"append_pfeature_descriptions(vcf_data_df, feature_descriptions)"},{"path":"https://umccr.github.io/pcgr/reference/append_pfeature_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"vcf_data_df Data frame sample variants VCF feature_descriptions Data frame SwissProt feature descriptions","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_pfeature_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"vcf_data_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_read_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"Function adds read support (depth, allelic fraction) tumor normal filters according settings","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_read_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"","code":"append_read_support(vcf_df, config = NULL, precision = 3)"},{"path":"https://umccr.github.io/pcgr/reference/append_read_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"vcf_df data frame variants config list workflow configuration values precision number significant digits allelic fraction estimation","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_read_support.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"vcf_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_tcga_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"Function adds TCGA annotations (cohort, frequency etc.) variant identifiers","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_tcga_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"","code":"append_tcga_var_link(var_df, pcgr_data = NULL, linktype = \"dbsource\")"},{"path":"https://umccr.github.io/pcgr/reference/append_tcga_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"var_df data frame variants pcgr_data PCGR data structure linktype type link","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_tcga_var_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"var_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_tfbs_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"Function adds TFBS annotations (dbMTS) genetic variant identifiers","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_tfbs_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"","code":"append_tfbs_annotation(var_df)"},{"path":"https://umccr.github.io/pcgr/reference/append_tfbs_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"var_df data frame variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_ucsc_segment_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"Function appends link UCSC genomic segment","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_ucsc_segment_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"","code":"append_ucsc_segment_link(   var_df,   hgname = \"hg38\",   chrom = NULL,   start = NULL,   end = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/append_ucsc_segment_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"var_df data frame genomic variants hgname name genoome assembly ('hg38','hg19') chrom chromosome name start chromosome start coordinate end chromosome end coordinate","code":""},{"path":"https://umccr.github.io/pcgr/reference/append_ucsc_segment_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"var_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"Function sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED TRUE variants population frequency exceeds max_tolerated_af","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"","code":"assign_germline_popfreq_status(   sample_calls,   pop = \"EUR\",   dbquery = \"1KG\",   max_tolerated_af = 0.01 )"},{"path":"https://umccr.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"sample_calls data frame variants pop population code (1000 Genomes/gnomAD) dbquery 1KG gnomAD max_tolerated_af max tolerated germline allele frequency","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"sample_calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_mutation_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"Function assigns one six mutation types list mutations","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_mutation_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"","code":"assign_mutation_type(var_df)"},{"path":"https://umccr.github.io/pcgr/reference/assign_mutation_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"var_df data frame variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_mutation_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"var_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_pathogenicity_evidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns variant pathogenicity evidence based on ACMG guidelines — assign_pathogenicity_evidence","title":"Function that assigns variant pathogenicity evidence based on ACMG guidelines — assign_pathogenicity_evidence","text":"Function assigns variant pathogenicity evidence based ACMG guidelines","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_pathogenicity_evidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns variant pathogenicity evidence based on ACMG guidelines — assign_pathogenicity_evidence","text":"","code":"assign_pathogenicity_evidence(cpg_calls, cpsr_config, pcgr_data)"},{"path":"https://umccr.github.io/pcgr/reference/assign_pathogenicity_evidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns variant pathogenicity evidence based on ACMG guidelines — assign_pathogenicity_evidence","text":"cpg_calls sample calls dbnsfp annotations cpsr_config cpsr configuration object pcgr_data pcgr data object","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_pathogenicity_evidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns variant pathogenicity evidence based on ACMG guidelines — assign_pathogenicity_evidence","text":"cpg_calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"Function assigns SOMATIC_CLASSIFICATION variants based evidence found variant set, potentially limited user-defined options","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"","code":"assign_somatic_classification(sample_calls, config)"},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"sample_calls data frame variants config configuration object","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"sample_calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"Function appends several tags denoting evidence somatic/germline status variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"","code":"assign_somatic_germline_evidence(sample_calls, config)"},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"sample_calls data frame variants config configuration object","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"sample_calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"Function assigns evidence items SNVs/InDels ACMG tiers 1 2","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"","code":"assign_tier1_tier2_acmg(pcg_report_snv_indel)"},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"pcg_report_snv_indel report object snv/indels","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"pcg_report_snv_indel data frame report elements","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"Function assigns evidence items SCNAs ACMG tiers 1 2","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"","code":"assign_tier1_tier2_acmg_cna(pcg_report_cna)"},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"pcg_report_cna report object CNAs","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"pcg_report_cna data frame report elements","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_variant_tiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assign variants to different tiers for\nprioritization of germline variants — assign_variant_tiers","title":"Function that assign variants to different tiers for\nprioritization of germline variants — assign_variant_tiers","text":"Function assign variants different tiers prioritization germline variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/assign_variant_tiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assign variants to different tiers for\nprioritization of germline variants — assign_variant_tiers","text":"","code":"assign_variant_tiers(   cpg_calls,   config = NULL,   cpsr_display_cols = NULL,   cpsr_tsv_cols = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/assign_variant_tiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assign variants to different tiers for\nprioritization of germline variants — assign_variant_tiers","text":"cpg_calls data frame variants predisposition_genes config CPSR configuration object run settings cpsr_display_cols list variables display report cpsr_tsv_cols list variables display report","code":""},{"path":"https://umccr.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"Regular expression terms indicative cancer-related phenotypes syndromes","code":""},{"path":"https://umccr.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"","code":"cancer_phenotypes_regex"},{"path":"https://umccr.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"long regular expression cancer-related phenotype terms","code":""},{"path":"https://umccr.github.io/pcgr/reference/check_common_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"Function checks whether set column names present two different data frames","code":""},{"path":"https://umccr.github.io/pcgr/reference/check_common_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"","code":"check_common_colnames(df1 = NULL, df2 = NULL, cnames = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/check_common_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"df1 data frame 1 df2 data frame 2 cnames character vector column names check presence","code":""},{"path":"https://umccr.github.io/pcgr/reference/check_common_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"existing_common_columns T/F","code":""},{"path":"https://umccr.github.io/pcgr/reference/clinvar_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","text":"Function assigns logical STATUS_CLINVAR_GERMLINE based whether ClinVar entry germline origin found given variant (entries data frame)","code":""},{"path":"https://umccr.github.io/pcgr/reference/clinvar_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","text":"","code":"clinvar_germline_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/clinvar_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","text":"sample_calls data frame sample calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Color encodings for report elements of PCGR/CPSR — color_palette","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"Color encodings report elements PCGR/CPSR","code":""},{"path":"https://umccr.github.io/pcgr/reference/color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"","code":"color_palette"},{"path":"https://umccr.github.io/pcgr/reference/color_palette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"list object different report elements color-coded PCGR/CPSR reports. list element two vectors: 'levels' 'values'. Currently, following list elements included: pathogenicity - Colors five-level pathogenicity levels (CPSR) clinical_evidence - Colors strength evidence cancer-variant associations (-E) tier - Colors tier levels variant prioritization (PCGR) report_color - Colors PCGR assay mode (tumor-control vs. tumor-) warning - Color warning (low confidence PCGR analysis output) success - Color success (evident uncertainty PCGR analysis output)","code":""},{"path":"https://umccr.github.io/pcgr/reference/cosmic_somatic_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"Function assigns logical (STATUS_COSMIC) reflecting whether variant co-incides entry COSMIC (germline)","code":""},{"path":"https://umccr.github.io/pcgr/reference/cosmic_somatic_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"","code":"cosmic_somatic_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/cosmic_somatic_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/cpsr_acmg.html","id":null,"dir":"Reference","previous_headings":"","what":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","title":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","text":"Scores documentation ACMG evidence criteria used variant classification CPSR","code":""},{"path":"https://umccr.github.io/pcgr/reference/cpsr_acmg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","text":"","code":"cpsr_acmg"},{"path":"https://umccr.github.io/pcgr/reference/cpsr_acmg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","text":"list object three elements: 'score2tier', 'evidence_codes', 'pathogenic_range_gnomad' score2tier - data frame 5 rows two columns indicate current score thresholds variant classification CPSR: CPSR_CLASSIFICATION - variant classification level (P, LP, VUS etc) CPSR_PATHOGENICITY_SCORE - indication CPSR \"score bucket\" given classification (HTML string) #' @format evidence_codes - data frame 34 rows 7 columns document ACMG evidence criteria used variant classification CPSR: cpsr_evidence_code - code evidence criterion ('ACMG_BA1_AD' etc) category - type evidence feature ('clinpop','funcvarpop','funcvar','funccomp') pathogenicity_pole - whether given evidence support benign variant character ('B'), pathogenic character ('P') category_long - long version 'category' column description - Verbose description given evidence criterion sherloc_code - Corresponding code identifier SherLoc (Nykamp et al., GiM, 2017) path_score - Score associated given evidence criterion (negative positive)","code":""},{"path":"https://umccr.github.io/pcgr/reference/custom_bed_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","title":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","text":"Function reports protein-coding geneset overlaps BED file","code":""},{"path":"https://umccr.github.io/pcgr/reference/custom_bed_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","text":"","code":"custom_bed_genes(bed_file, pcgr_data)"},{"path":"https://umccr.github.io/pcgr/reference/custom_bed_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","text":"bed_file BED file name selected transcripts panel 0 pcgr_data object PCGR annotation data","code":""},{"path":"https://umccr.github.io/pcgr/reference/data_integrity_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","title":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","text":"Function performs sanity check query VCF pcgrr package, ensuring required tags present annotated VCF","code":""},{"path":"https://umccr.github.io/pcgr/reference/data_integrity_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","text":"","code":"data_integrity_check(vcf_df, pcgr_data, config = NULL, workflow = \"pcgr\")"},{"path":"https://umccr.github.io/pcgr/reference/data_integrity_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","text":"vcf_df data frame variants VCF pcgr_data PCGR data object config PCGR/CPSR config object workflow type workflow (pcgr/cpsr)","code":""},{"path":"https://umccr.github.io/pcgr/reference/dbsnp_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","title":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"Function assigns logical (STATUS_DBSNP_GERMLINE) reflecting whether variant co-incides entry dbSNP (germline)","code":""},{"path":"https://umccr.github.io/pcgr/reference/dbsnp_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"","code":"dbsnp_germline_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/dbsnp_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/deduplicate_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","title":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","text":"Function removes redundancy variant evidence items (.e. variant assicated evidence codon level, evidence exon/gene level ignored)","code":""},{"path":"https://umccr.github.io/pcgr/reference/deduplicate_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","text":"","code":"deduplicate_eitems(   var_eitems = NULL,   target_type = \"exact\",   target_other = c(\"codon\", \"exon\", \"gene\") )"},{"path":"https://umccr.github.io/pcgr/reference/deduplicate_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","text":"var_eitems data frame variant evidence items target_type resolution level used \"best\" level ('exact' 'codon) target_other resolution levels evidence items ignored evidence found target_type level","code":""},{"path":"https://umccr.github.io/pcgr/reference/detect_cancer_traits_clinvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves variants in cancer predisposition genes linked\nto cancer-related conditions according to ClinVar — detect_cancer_traits_clinvar","title":"Function that retrieves variants in cancer predisposition genes linked\nto cancer-related conditions according to ClinVar — detect_cancer_traits_clinvar","text":"Function retrieves variants cancer predisposition genes linked cancer-related conditions according ClinVar","code":""},{"path":"https://umccr.github.io/pcgr/reference/detect_cancer_traits_clinvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves variants in cancer predisposition genes linked\nto cancer-related conditions according to ClinVar — detect_cancer_traits_clinvar","text":"","code":"detect_cancer_traits_clinvar(cpg_calls, oncotree, umls_map)"},{"path":"https://umccr.github.io/pcgr/reference/detect_cancer_traits_clinvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves variants in cancer predisposition genes linked\nto cancer-related conditions according to ClinVar — detect_cancer_traits_clinvar","text":"cpg_calls data frame variants predisposition_genes oncotree data frame hereditary cancer phenotypes OncoTree umls_map data frame UMLS phenotype entries","code":""},{"path":"https://umccr.github.io/pcgr/reference/detect_vcf_sample_name.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"function detects whether sample name variant data frame unique (present column name VCF_SAMPLE_ID), throws error multiple sample names present CPSR workflow","code":""},{"path":"https://umccr.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"","code":"detect_vcf_sample_name(df, sample_name = NULL, cpsr = FALSE)"},{"path":"https://umccr.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"df VCF data frame sample_name name sample identifier cpsr logical indicating CPSR workflow","code":""},{"path":"https://umccr.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"df Vranges object","code":""},{"path":"https://umccr.github.io/pcgr/reference/determine_genotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"Function assigns explicit genotype (heterozygous/homozygous) VCF GT tag","code":""},{"path":"https://umccr.github.io/pcgr/reference/determine_genotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"","code":"determine_genotype(vcf_df)"},{"path":"https://umccr.github.io/pcgr/reference/determine_genotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"vcf_df data frame variant data VCF","code":""},{"path":"https://umccr.github.io/pcgr/reference/determine_genotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"vcf_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/determine_pathogenicity_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns final pathogenicity classification (B, LB, VUS, P, LP)\nbased on accumulated scores from different ACMG criteria and pre-defined\ncutoffs (calibrated against ClinVar) — determine_pathogenicity_classification","title":"Function that assigns final pathogenicity classification (B, LB, VUS, P, LP)\nbased on accumulated scores from different ACMG criteria and pre-defined\ncutoffs (calibrated against ClinVar) — determine_pathogenicity_classification","text":"Function assigns final pathogenicity classification (B, LB, VUS, P, LP) based accumulated scores different ACMG criteria pre-defined cutoffs (calibrated ClinVar)","code":""},{"path":"https://umccr.github.io/pcgr/reference/determine_pathogenicity_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns final pathogenicity classification (B, LB, VUS, P, LP)\nbased on accumulated scores from different ACMG criteria and pre-defined\ncutoffs (calibrated against ClinVar) — determine_pathogenicity_classification","text":"","code":"determine_pathogenicity_classification(cpg_calls)"},{"path":"https://umccr.github.io/pcgr/reference/determine_pathogenicity_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns final pathogenicity classification (B, LB, VUS, P, LP)\nbased on accumulated scores from different ACMG criteria and pre-defined\ncutoffs (calibrated against ClinVar) — determine_pathogenicity_classification","text":"cpg_calls data frame variant calls predisposition genes","code":""},{"path":"https://umccr.github.io/pcgr/reference/determine_pathogenicity_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns final pathogenicity classification (B, LB, VUS, P, LP)\nbased on accumulated scores from different ACMG criteria and pre-defined\ncutoffs (calibrated against ClinVar) — determine_pathogenicity_classification","text":"cpg_calls data frame pathogenicity classification appended","code":""},{"path":"https://umccr.github.io/pcgr/reference/df_string_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"Function performs stringr::str_replace strings multiple string columns dataframe","code":""},{"path":"https://umccr.github.io/pcgr/reference/df_string_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"","code":"df_string_replace(df, strings, pattern, replacement, replace_all = F)"},{"path":"https://umccr.github.io/pcgr/reference/df_string_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"df data frame strings name columns string replace performed pattern pattern replace replacement string replace replace_all logical - replace occurrences","code":""},{"path":"https://umccr.github.io/pcgr/reference/df_string_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"df","code":""},{"path":"https://umccr.github.io/pcgr/reference/effect_prediction_algos.html","id":null,"dir":"Reference","previous_headings":"","what":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"List URLs range variant effect prediction algorithms","code":""},{"path":"https://umccr.github.io/pcgr/reference/effect_prediction_algos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"","code":"effect_prediction_algos"},{"path":"https://umccr.github.io/pcgr/reference/effect_prediction_algos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"data.frame 21 rows 3 columns indicates URL's variant effect prediction algorithms algorithm - Name encoding effect prediction algorithm url - URL display_name - Display name use reporting","code":""},{"path":"https://umccr.github.io/pcgr/reference/filter_eitems_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"Function filters clinical evidence items tumor type/primary site","code":""},{"path":"https://umccr.github.io/pcgr/reference/filter_eitems_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"","code":"filter_eitems_by_site(eitems = NULL, ontology = NULL, primary_site = \"\")"},{"path":"https://umccr.github.io/pcgr/reference/filter_eitems_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"eitems data frame clinical evidence items ontology phenotype ontology data frame primary_site primary tumor site","code":""},{"path":"https://umccr.github.io/pcgr/reference/filter_read_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"Function filters variant set (depth, allelic fraction) tumor normal filters according settings","code":""},{"path":"https://umccr.github.io/pcgr/reference/filter_read_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"","code":"filter_read_support(vcf_df, config = NULL, precision = 3)"},{"path":"https://umccr.github.io/pcgr/reference/filter_read_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"vcf_df data frame variants config list workflow configuration values precision number significant digits allelic fraction estimation","code":""},{"path":"https://umccr.github.io/pcgr/reference/filter_read_support.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"vcf_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_annotation_link.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"function generates HTML link selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_annotation_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"","code":"generate_annotation_link(   df,   vardb = \"DBSNP\",   group_by_var = \"VAR_ID\",   url_prefix = \"http://www.ncbi.nlm.nih.gov/projects/SNP/snp_ref.cgi?rs=\",   link_key_var = \"DBSNPRSID\",   link_display_var = \"DBSNPRSID\" )"},{"path":"https://umccr.github.io/pcgr/reference/generate_annotation_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"df data frame vardb type database group_by_var variable used grouping (VAR_ID) url_prefix url prefix link generation link_key_var variable used url linking link_display_var variable used url display","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_annotation_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"df_annotation_links","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_cpsr_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates predisposition_report - CPSR — generate_cpsr_report","title":"Function that generates predisposition_report - CPSR — generate_cpsr_report","text":"Function generates predisposition_report - CPSR","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_cpsr_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates predisposition_report - CPSR — generate_cpsr_report","text":"","code":"generate_cpsr_report(   project_directory = NULL,   pcgr_data = NULL,   cpsr_config = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/generate_cpsr_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates predisposition_report - CPSR — generate_cpsr_report","text":"project_directory name project/output directory pcgr_data Object underlying knowledge base (PCGR/CPSR) cpsr_config Object CPSR configuration parameters (data directory, virtual panels, sample names, genome assembly etc)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_pcgr_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","text":"Function generates contents cancer genome report (PCGR)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_pcgr_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","text":"","code":"generate_pcgr_report(   project_directory = NULL,   pcgr_data = NULL,   config = NULL,   tier_model = \"pcgr_acmg\" )"},{"path":"https://umccr.github.io/pcgr/reference/generate_pcgr_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","text":"project_directory name project directory pcgr_data List object multiple PCGR data bundle annotations config Object PCGR configuration parameters tier_model Variant tier model","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that annotates CNV segment files — generate_report_data_cna","title":"Function that annotates CNV segment files — generate_report_data_cna","text":"Function annotates CNV segment files","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that annotates CNV segment files — generate_report_data_cna","text":"","code":"generate_report_data_cna(   cna_segments_tsv,   pcgr_data,   sample_name,   pcgr_config,   transcript_overlap_pct = 100 )"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that annotates CNV segment files — generate_report_data_cna","text":"cna_segments_tsv CNV file name chromosomal log(2)-ratio segments pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters transcript_overlap_pct required aberration overlap fraction (percent) reported transcripts (default 100 percent)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_kataegis.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"Function generates data frame potential kataegis events","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_kataegis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"","code":"generate_report_data_kataegis(   variant_set,   sample_name = \"SampleX\",   build = \"grch37\" )"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_kataegis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"variant_set data frame SNVs/InDels (must contain 'CHROM', 'POS','REF','ALT') sample_name name tumor sample build genome assembly (grch37/grch38)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_msi.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"Function generates MSI prediction data PCGR report","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_msi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"","code":"generate_report_data_msi(sample_calls, pcgr_data, sample_name, pcgr_config)"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_msi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"sample_calls variant calls subject mutational signature analysis pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_rainfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","title":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","text":"Function generates data rainfall plot (mutation density along genome, considering SNVs )","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_rainfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","text":"","code":"generate_report_data_rainfall(   variant_set,   colors = NULL,   autosomes = FALSE,   build = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_rainfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","text":"variant_set data frame SNVs/InDels (must contain \"CHROM\", \"POS\",\"REF\",\"ALT\") colors character vector six color codes (denoting different mutation types) autosomes logical indicating plotting consider autosomes build genome assembly (grch37/grch38)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_signatures_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","text":"Function generates mutational signatures data PCGR report","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_signatures_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","text":"","code":"generate_report_data_signatures_mp(   vcf_fname,   pcgr_data,   sample_name,   pcgr_config,   type_specific = T )"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_signatures_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","text":"vcf_fname VCF file processed PCGR annotation pipeline - possibly filtered depth/allelic fraction pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters type_specific logical indicating reference signatures included (F) rather known prevalent tumor (T)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"Function generates tiered variant sets SNVs/InDels","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"","code":"generate_report_data_snv_indel(   sample_calls,   pcgr_data,   sample_name,   config,   callset = \"somatic calls\",   biomarker_mapping_stringency = 1,   tier_model = \"pcgr_acmg\" )"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"sample_calls variant calls subject mutational signature analysis pcgr_data object PCGR annotation data sample_name sample identifier config Object PCGR configuration parameters callset type calls biomarker_mapping_stringency quality level biomarkers tier_model tier model (pcgr_acmg)","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"pcg_report_data data frame report elements","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"Function tiered variant sets SNVs/InDels","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"","code":"generate_report_data_tmb(sample_calls, pcgr_data, sample_name, pcgr_config)"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"sample_calls variant calls subject mutational signature analysis pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"pcg_report_data data frame report elements","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"Function retrieves relevant (interventional based molecular target) clinical trials given tumor type","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"","code":"generate_report_data_trials(pcgr_data, config, sample_name)"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"pcgr_data PCGR data bundle object config PCGR run configurations sample_name sample name","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"pcg_report_trials data frame report elements","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","title":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","text":"Function generates germline-filtered callset PCGR report statistics given tumor-callsets","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","text":"","code":"generate_report_data_tumor_only(   unfiltered_sample_calls,   sample_name,   pcgr_config )"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","text":"unfiltered_sample_calls variant calls sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_value_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates value box data for PCGR report — generate_report_data_value_box","title":"Function that generates value box data for PCGR report — generate_report_data_value_box","text":"Function generates value box data PCGR report","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_value_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates value box data for PCGR report — generate_report_data_value_box","text":"","code":"generate_report_data_value_box(pcg_report, pcgr_data, sample_name, pcgr_config)"},{"path":"https://umccr.github.io/pcgr/reference/generate_report_data_value_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates value box data for PCGR report — generate_report_data_value_box","text":"pcg_report object existing PCGR report data elements pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_tier_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"Function generates dense tiered annotated variant datasets","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_tier_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"","code":"generate_tier_tsv(variant_set, config, annotation_tags, sample_name = \"test\")"},{"path":"https://umccr.github.io/pcgr/reference/generate_tier_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"variant_set List tiered variants config PCGR configuration settings annotation_tags List display columns sample_name Sample identifier","code":""},{"path":"https://umccr.github.io/pcgr/reference/generate_tier_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"tsv_variants data frame tier-annotated list variants tab-separated output","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"Function reads fully annotated VCF PCGR VEP/vcfanno pipeline","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"","code":"get_calls(   tsv_gz_file,   pcgr_data,   sample_name,   config,   oncotree = NULL,   cpsr = F,   n_lines_skip = 1,   maf_filenames = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/get_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"tsv_gz_file Bgzipped VCF file pcgr_data object PCGR annotation data sample_name sample identifier config Object PCGR configuration parameters oncotree data frame sample-dependent phenotype terms UMLS cpsr logical indicating call retrieval CPSR workflow n_lines_skip number lines skip vcf2tsv file maf_filenames list filenames sample MAFs (temp final)","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"vcf_data_df","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"Function retrieves clinical evidence items (CIVIC, CBMDB) CNA aberrations","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"","code":"get_clin_assocs_cna(onco_ts_sets, annotation_tags = NULL, eitems = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"onco_ts_sets data frame annotations respect lost tumor suppressor genes gained oncogenes annotation_tags list annotation tags display report eitems Data frame clinical evidence items","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"list","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"Function matches clinical evidence items (CIVIC, CBMDB) somatic cancer variants detected tumor","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"","code":"get_clin_assocs_snv_indel(sample_calls, annotation_tags = NULL, eitems = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"sample_calls data frame sample variants annotation_tags list annotation tags display report eitems data frame clinical evidence items","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"list","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_cna_cytoband.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","title":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","text":"Function gets chromosome bands copy number segments","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_cna_cytoband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","text":"","code":"get_cna_cytoband(cna_df, pcgr_data = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/get_cna_cytoband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","text":"cna_df genomic ranges object copy number aberrations pcgr_data pcgr data bundle object","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_cna_overlapping_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","title":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","text":"Functions finds transcripts overlap CNA segments. new data frame one entry per transcript-CNA overlap entry returned","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_cna_overlapping_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","text":"","code":"get_cna_overlapping_transcripts(cna_df, pcgr_data)"},{"path":"https://umccr.github.io/pcgr/reference/get_cna_overlapping_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","text":"cna_df data frame copy number segments pcgr_data PCGR list object data","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_genome_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get BSgenome Object — get_genome_obj","title":"Get BSgenome Object — get_genome_obj","text":"Gets BSgenome object given human genome assembly string.","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_genome_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get BSgenome Object — get_genome_obj","text":"","code":"get_genome_obj(genome)"},{"path":"https://umccr.github.io/pcgr/reference/get_genome_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get BSgenome Object — get_genome_obj","text":"genome Human genome assembly string: hg38 hg19.","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_genome_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get BSgenome Object — get_genome_obj","text":"BSgenome object.","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_genome_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get BSgenome Object — get_genome_obj","text":"","code":"if (FALSE) { get_genome_obj(\"hg38\") }"},{"path":"https://umccr.github.io/pcgr/reference/get_germline_biomarkers.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves clinical evidence items (CIVIC, CGI) for\nsomatic cancer variants — get_germline_biomarkers","title":"Function that retrieves clinical evidence items (CIVIC, CGI) for\nsomatic cancer variants — get_germline_biomarkers","text":"Function retrieves clinical evidence items (CIVIC, CGI) somatic cancer variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_germline_biomarkers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves clinical evidence items (CIVIC, CGI) for\nsomatic cancer variants — get_germline_biomarkers","text":"","code":"get_germline_biomarkers(sample_calls, colset = NULL, eitems = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/get_germline_biomarkers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves clinical evidence items (CIVIC, CGI) for\nsomatic cancer variants — get_germline_biomarkers","text":"sample_calls data frame germline variant callset query sample colset vector column names display report element eitems clinical evidence items linking germline variants impact therapeutic response/diagnosis/prognosis etc","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_germline_biomarkers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves clinical evidence items (CIVIC, CGI) for\nsomatic cancer variants — get_germline_biomarkers","text":"list","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_insilico_prediction_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that counts insilico predictions of variant effects\n(i.e. damaging/tolerated) from dbNSFP — get_insilico_prediction_statistics","title":"Function that counts insilico predictions of variant effects\n(i.e. damaging/tolerated) from dbNSFP — get_insilico_prediction_statistics","text":"Function counts insilico predictions variant effects (.e. damaging/tolerated) dbNSFP","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_insilico_prediction_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that counts insilico predictions of variant effects\n(i.e. damaging/tolerated) from dbNSFP — get_insilico_prediction_statistics","text":"","code":"get_insilico_prediction_statistics(cpg_calls)"},{"path":"https://umccr.github.io/pcgr/reference/get_insilico_prediction_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that counts insilico predictions of variant effects\n(i.e. damaging/tolerated) from dbNSFP — get_insilico_prediction_statistics","text":"cpg_calls sample calls dbNSFP annotations","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_insilico_prediction_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that counts insilico predictions of variant effects\n(i.e. damaging/tolerated) from dbNSFP — get_insilico_prediction_statistics","text":"cpg_calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_max_rows_pr_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that gets the maximum number of rows across different\ntier data frames in CPSR report — get_max_rows_pr_datatable","title":"Function that gets the maximum number of rows across different\ntier data frames in CPSR report — get_max_rows_pr_datatable","text":"Function gets maximum number rows across different tier data frames CPSR report","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_max_rows_pr_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that gets the maximum number of rows across different\ntier data frames in CPSR report — get_max_rows_pr_datatable","text":"","code":"get_max_rows_pr_datatable(cps_report)"},{"path":"https://umccr.github.io/pcgr/reference/get_max_rows_pr_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that gets the maximum number of rows across different\ntier data frames in CPSR report — get_max_rows_pr_datatable","text":"cps_report CPSR report structure tier data frames","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_max_rows_pr_datatable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that gets the maximum number of rows across different\ntier data frames in CPSR report — get_max_rows_pr_datatable","text":"max_row_nr maximum number rows","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_oncogene_tsgene_target_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","title":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","text":"Function detects assigns oncogenes subject copy number amplifications, tumor suppressor genes subject homozygous deletions Also detects drug targets subject copy number amplifications","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_oncogene_tsgene_target_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","text":"","code":"get_oncogene_tsgene_target_sets(   cna_df,   transcript_overlap_pct = 100,   log_r_gain = 0.8,   log_r_homdel = -0.8,   tumor_type = \"Any\",   pcgr_data = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/get_oncogene_tsgene_target_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","text":"cna_df data frame copy number-transcript records transcript_overlap_pct minimum level overlap transcripts (pct) log_r_gain logR threshold copy number amplifications log_r_homdel logR threshold homozygous deletions tumor_type type tumor pcgr_data PCGR data object","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"Function excludes genomic aberrations non-nuclear chromosomes","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"","code":"get_ordinary_chromosomes(vcf_df, chrom_var = \"CHROM\")"},{"path":"https://umccr.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"vcf_df data frame chrom_var variable name chromosome data frame","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"vcf_df data frame mutations nuclear chromosomes ","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_population_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"Function retrieves name VCF INFO tag population description gnomad/1000G population","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_population_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"","code":"get_population_tag(population_code, db = \"1KG\", subset = NA)"},{"path":"https://umccr.github.io/pcgr/reference/get_population_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"population_code three-letter code db 1KG GNOMAD subset NA \"non_cancer\" (GNOMAD)","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_population_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"pop_tag_info","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","title":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","text":"Function retrieves prevalent signatures given tumor type/primary site Data collected COSMIC v3.2.","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","text":"","code":"get_prevalent_site_signatures(   site = \"Any\",   custom_collection = NULL,   pcgr_data = NULL,   prevalence_pct = 5,   incl_poss_artifacts = T )"},{"path":"https://umccr.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","text":"site Primary tumor site custom_collection Custom collection signatures COSMIC pcgr_data PCGR data object prevalence_pct Minimum prevalence (pct) signature cohorts associated primary site incl_poss_artifacts logical indicating artefact signatures included","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_proper_maf_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"Function transforms tier-structured variant data frame MAF-like data frame (input 2020plus, MutSigCV)","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_proper_maf_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"","code":"get_proper_maf_alleles(maf_df, genome_seq, seqinfo)"},{"path":"https://umccr.github.io/pcgr/reference/get_proper_maf_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"maf_df data frame somatic mutations genome_seq BSgenome object seqinfo seqinfo object","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_proper_maf_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"maf_all","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosome_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","title":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","text":"Function removes copy number segments go beyond chrosomal lengths given assembly","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosome_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","text":"","code":"get_valid_chromosome_segments(cna_segments_df, genome_assembly, bsg)"},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosome_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","text":"cna_segments_df genomic segments CNA genome_assembly genome assembly (grch37/grch38) bsg BSgenome object","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"Checks valid chromosome names data frame variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"","code":"get_valid_chromosomes(vcf_data_df, chromosome_column = \"CHROM\", bsg = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"vcf_data_df data frame chromosome_column name chromosome column bsg BSGenome object","code":""},{"path":"https://umccr.github.io/pcgr/reference/get_valid_chromosomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"vcf_data_df valid data frame valid mutations","code":""},{"path":"https://umccr.github.io/pcgr/reference/het_af_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"Function assigns logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether variant likely heterozygous (germline) - based allelic fraction (AF_TUMOR), presence gnomAD dbSNP, presence TCGA COSMIC","code":""},{"path":"https://umccr.github.io/pcgr/reference/het_af_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"","code":"het_af_germline_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/het_af_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/heterozygous_states.html","id":null,"dir":"Reference","previous_headings":"","what":"VCF encodings of heterozygous variant states — heterozygous_states","title":"VCF encodings of heterozygous variant states — heterozygous_states","text":"VCF encodings heterozygous variant states","code":""},{"path":"https://umccr.github.io/pcgr/reference/heterozygous_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCF encodings of heterozygous variant states — heterozygous_states","text":"","code":"heterozygous_states"},{"path":"https://umccr.github.io/pcgr/reference/heterozygous_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VCF encodings of heterozygous variant states — heterozygous_states","text":"vector potential VCF encodings heterozygous variant states","code":""},{"path":"https://umccr.github.io/pcgr/reference/hom_af_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","text":"Function assigns logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether variant likely homozygous (germline) - based allelic fraction (AF_TUMOR)","code":""},{"path":"https://umccr.github.io/pcgr/reference/hom_af_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","text":"","code":"hom_af_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/hom_af_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/homozygous_states.html","id":null,"dir":"Reference","previous_headings":"","what":"VCF encodings of homozygous variant states — homozygous_states","title":"VCF encodings of homozygous variant states — homozygous_states","text":"VCF encodings homozygous variant states","code":""},{"path":"https://umccr.github.io/pcgr/reference/homozygous_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCF encodings of homozygous variant states — homozygous_states","text":"","code":"homozygous_states"},{"path":"https://umccr.github.io/pcgr/reference/homozygous_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VCF encodings of homozygous variant states — homozygous_states","text":"vector potential VCF encodings homozygous variant states","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_cna_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with CNA information — init_cna_content","title":"Function that initiates report element with CNA information — init_cna_content","text":"Function initiates report element CNA information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_cna_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with CNA information — init_cna_content","text":"","code":"init_cna_content(rep = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/init_cna_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with CNA information — init_cna_content","text":"rep PCGR report structure","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_cna_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with CNA information — init_cna_content","text":"rep updated PCGR report structure - initialized CNA content","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_germline_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"Function initiates report element germline variant information (CPSR)","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_germline_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"","code":"init_germline_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_germline_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"rep Report structure initialized germline data (CPSR)","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_m_signature_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with mutational signatures information — init_m_signature_content","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"Function initiates report element mutational signatures information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_m_signature_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"","code":"init_m_signature_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_m_signature_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"rep Report structure initialized signature data","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_rainfall_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with rainfall information — init_rainfall_content","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"Function initiates report element rainfall information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_rainfall_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"","code":"init_rainfall_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_rainfall_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"rep Report structure initialized rainfall data","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates PCGR/CPSR report object — init_report","title":"Function that initiates PCGR/CPSR report object — init_report","text":"Function initiates PCGR/CPSR report object","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates PCGR/CPSR report object — init_report","text":"","code":"init_report(   config = NULL,   class = NULL,   pcgr_data = NULL,   type = \"somatic\",   virtual_panel_id = \"-1\",   custom_bed = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/init_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates PCGR/CPSR report object — init_report","text":"config Object configuration parameters class report analysis section (NULL defaults full report) pcgr_data PCGR data bundle type Type report ('somatic' 'germline') virtual_panel_id identifier(s) virtual panel id custom_bed custom BED file target loci screening","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_report_display_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates ranked report display information — init_report_display_content","title":"Function that initiates ranked report display information — init_report_display_content","text":"Function initiates ranked report display information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_report_display_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates ranked report display information — init_report_display_content","text":"","code":"init_report_display_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_report_display_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates ranked report display information — init_report_display_content","text":"rep Report structure initialized ranked display","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_snv_indel_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"Function initiates report element SNV/InDel information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_snv_indel_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"","code":"init_snv_indel_content(rep = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/init_snv_indel_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"rep PCGR report structure","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_snv_indel_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"rep updated PCGR report structure - initialized SNV/InDel content","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_tmb_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with TMB information — init_tmb_content","title":"Function that initiates report element with TMB information — init_tmb_content","text":"Function initiates report element TMB information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_tmb_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with TMB information — init_tmb_content","text":"","code":"init_tmb_content(tcga_tmb = NULL, config = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/init_tmb_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with TMB information — init_tmb_content","text":"tcga_tmb data frame TMB distribution TCGA samples config PCGR configuration object","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_tmb_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with TMB information — init_tmb_content","text":"rep TMB report element","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_tumor_only_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with tumor-only information — init_tumor_only_content","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"Function initiates report element tumor-information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_tumor_only_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"","code":"init_tumor_only_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_tumor_only_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"rep Report structure initialized tumor-data","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_valuebox_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with value box information — init_valuebox_content","title":"Function that initiates report element with value box information — init_valuebox_content","text":"Function initiates report element value box information","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_valuebox_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with value box information — init_valuebox_content","text":"","code":"init_valuebox_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_valuebox_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with value box information — init_valuebox_content","text":"rep Report structure initialized value box data","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_var_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with variant data — init_var_content","title":"Function that initiates report element with variant data — init_var_content","text":"Function initiates report element variant data","code":""},{"path":"https://umccr.github.io/pcgr/reference/init_var_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with variant data — init_var_content","text":"","code":"init_var_content()"},{"path":"https://umccr.github.io/pcgr/reference/init_var_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with variant data — init_var_content","text":"rep Report structure initialized variant data","code":""},{"path":"https://umccr.github.io/pcgr/reference/kataegis_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"Function detects kataegis events data frame genomic cooordinates mutations","code":""},{"path":"https://umccr.github.io/pcgr/reference/kataegis_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"","code":"kataegis_detect(   data,   sample_id = \"sample_id\",   build = \"grch37\",   min.mut = 6,   max.dis = 1000,   chr = \"chr\",   pos = \"pos\",   txdb = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/kataegis_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"data data frame somatic mutations, produced kataegis_input sample_id sample identifier build genomoe assembly build min.mut minimum number mutations localized hypermutated region max.dis maximum distance kataegis event (basepairs) chr column name data denotes chromosome pos column name data denotes position txdb transcript database (txdb)","code":""},{"path":"https://umccr.github.io/pcgr/reference/kataegis_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"kataegis_df data frame potential kataegis events","code":""},{"path":"https://umccr.github.io/pcgr/reference/kataegis_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","text":"Function detects kataegis events data frame genomic cooordinates mutations","code":""},{"path":"https://umccr.github.io/pcgr/reference/kataegis_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","text":"","code":"kataegis_input(   variant_set,   chr = \"chr\",   pos = \"pos\",   ref = \"ref\",   alt = \"alt\",   build = NULL,   context_size = 10 )"},{"path":"https://umccr.github.io/pcgr/reference/kataegis_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","text":"variant_set data frame raw set somatic mutations chr column name data denotes chromosome pos column name data denotes position ref column name data denotes reference allele alt column name data denotes alternate allele build genome build (grch37 hg38) context_size size neighbouring sequence context","code":""},{"path":"https://umccr.github.io/pcgr/reference/load_all_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"Function loads evidence items CIViC CGI, combines unified data.frame","code":""},{"path":"https://umccr.github.io/pcgr/reference/load_all_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"","code":"load_all_eitems(eitems_raw = NULL, alteration_type = \"MUT\", origin = \"Somatic\")"},{"path":"https://umccr.github.io/pcgr/reference/load_all_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"eitems_raw raw data frame evidence items alteration_type type alteration ('MUT','MUT_LOF','CNA') origin variant origin ('Germline','Somatic')","code":""},{"path":"https://umccr.github.io/pcgr/reference/load_all_eitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"all_eitems","code":""},{"path":"https://umccr.github.io/pcgr/reference/load_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"Function loads specific set clinical variant evidence items (CIViC + CGI) based given parameters (mutation type, variant origin, tumor type etc)","code":""},{"path":"https://umccr.github.io/pcgr/reference/load_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"","code":"load_eitems(   eitems_raw = NULL,   ontology = NULL,   alteration_type = \"MUT\",   origin = \"Somatic\",   tumor_type_specificity = NULL,   tumor_type = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/load_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"eitems_raw complete set clinical variant evidence items ontology phenotype ontology data frame alteration_type type alteration ('MUT', 'CNA', 'MUT_LOF') origin variant origin ('Somatic','Germline') tumor_type_specificity tumor type specificity ('', 'specific') tumor_type primary tumor site","code":""},{"path":"https://umccr.github.io/pcgr/reference/load_eitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"eitems variant evidence items","code":""},{"path":"https://umccr.github.io/pcgr/reference/log_var_eitem_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","title":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","text":"Function logs number evidence items found, different levels resolution","code":""},{"path":"https://umccr.github.io/pcgr/reference/log_var_eitem_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","text":"","code":"log_var_eitem_stats(var_eitems = NULL, target_type = \"exact\")"},{"path":"https://umccr.github.io/pcgr/reference/log_var_eitem_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","text":"var_eitems data frame variant evidence items target_type resolution evidence items","code":""},{"path":"https://umccr.github.io/pcgr/reference/make_upset_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"Function makes input data UpSet plot (filtering/intersection results) somatic-germline classification procedure","code":""},{"path":"https://umccr.github.io/pcgr/reference/make_upset_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"","code":"make_upset_plot_data(calls, config)"},{"path":"https://umccr.github.io/pcgr/reference/make_upset_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"calls unfiltered calls (germline + somatic) config config","code":""},{"path":"https://umccr.github.io/pcgr/reference/make_upset_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"upset data","code":""},{"path":"https://umccr.github.io/pcgr/reference/match_eitems_to_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that matches variants to evidence items — match_eitems_to_var","title":"Function that matches variants to evidence items — match_eitems_to_var","text":"Function matches variants evidence items","code":""},{"path":"https://umccr.github.io/pcgr/reference/match_eitems_to_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that matches variants to evidence items — match_eitems_to_var","text":"","code":"match_eitems_to_var(   sample_calls,   db = \"civic\",   colset = NULL,   eitems = NULL,   region_marker = T )"},{"path":"https://umccr.github.io/pcgr/reference/match_eitems_to_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that matches variants to evidence items — match_eitems_to_var","text":"sample_calls data frame variant calls db database evidence items ('civic','cgi') colset character vector column names pull sample_calls eitems raw list evidence items region_marker logical indication region biomarkers matched ","code":""},{"path":"https://umccr.github.io/pcgr/reference/max_af_gnomad.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"Function assigns maximum value variable (MAX_AF_GNOMAD) reflecting maximum allele frequency given variant across gnomAD populations","code":""},{"path":"https://umccr.github.io/pcgr/reference/max_af_gnomad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"","code":"max_af_gnomad(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/max_af_gnomad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/max_af_onekg.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","title":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","text":"Function assigns maximum value variable (MAX_AF_1KG) reflecting maximum allele frequency given variant across oneKG populations","code":""},{"path":"https://umccr.github.io/pcgr/reference/max_af_onekg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","text":"","code":"max_af_onekg(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/max_af_onekg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"Function plots indel fraction given sample contrasts distribution MSI-H/MSS samples TCGA","code":""},{"path":"https://umccr.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"","code":"msi_indel_fraction_plot(tcga_msi_dataset, indel_fraction)"},{"path":"https://umccr.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"tcga_msi_dataset underlying dataset TCGA used development statistical classifier indel_fraction fraction indels mutations (SNVs + indels)","code":""},{"path":"https://umccr.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"p","code":""},{"path":"https://umccr.github.io/pcgr/reference/order_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"Function orders genomic aberrations according order chromosomes chromosomal position","code":""},{"path":"https://umccr.github.io/pcgr/reference/order_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"","code":"order_variants(vcf_df, chrom_var = \"CHROM\", pos_var = \"POS\")"},{"path":"https://umccr.github.io/pcgr/reference/order_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"vcf_df data frame chrom_var variable name chromosome data frame pos_var variable name chromosomal position","code":""},{"path":"https://umccr.github.io/pcgr/reference/order_variants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"vcf_df data frame ordered mutations","code":""},{"path":"https://umccr.github.io/pcgr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://umccr.github.io/pcgr/reference/pkg_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Does R Package Exist — pkg_exists","title":"Does R Package Exist — pkg_exists","text":"Checks specified R package exists local system.","code":""},{"path":"https://umccr.github.io/pcgr/reference/pkg_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does R Package Exist — pkg_exists","text":"","code":"pkg_exists(p)"},{"path":"https://umccr.github.io/pcgr/reference/pkg_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does R Package Exist — pkg_exists","text":"p R package check .","code":""},{"path":"https://umccr.github.io/pcgr/reference/pkg_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does R Package Exist — pkg_exists","text":"TRUE package exists, FALSE otherwise.","code":""},{"path":"https://umccr.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","title":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"Function makes plot TMB boxplots TCGA cohorts, highlighting TMB estimate given sample cohort/primary site interest","code":""},{"path":"https://umccr.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"","code":"plot_tmb_primary_site_tcga(   tcga_tmb,   p_site = \"Liver\",   tmb_estimate = 5,   algorithm = \"all_coding\" )"},{"path":"https://umccr.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"tcga_tmb data frame TMB estimates TCGA samples p_site primary tumor_site (sample) tmb_estimate estimate mutational burden (sample) algorithm type TMB algorithm","code":""},{"path":"https://umccr.github.io/pcgr/reference/plot_value_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"Function plots four value boxes important findings cancer genome","code":""},{"path":"https://umccr.github.io/pcgr/reference/plot_value_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"","code":"plot_value_boxes(pcg_report)"},{"path":"https://umccr.github.io/pcgr/reference/plot_value_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"pcg_report pcg report list elements","code":""},{"path":"https://umccr.github.io/pcgr/reference/plot_value_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"p","code":""},{"path":"https://umccr.github.io/pcgr/reference/pon_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","title":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","text":"Function assigns logical (STATUS_PON) reflecting whether variant co-inciding variant present panel--normals database (PANEL_OF_NORMALS column TRUE)","code":""},{"path":"https://umccr.github.io/pcgr/reference/pon_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","text":"","code":"pon_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/pon_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/predict_msi_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"Function predicts MSI status based fraction indels among calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/predict_msi_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"","code":"predict_msi_status(   vcf_data_df,   pcgr_data,   msi_prediction_model,   msi_prediction_dataset,   target_size_mb,   sample_name = \"Test\" )"},{"path":"https://umccr.github.io/pcgr/reference/predict_msi_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"vcf_data_df data frame somatic mutations/indels pcgr_data object PCGR datasets msi_prediction_model statistical model MSI prediction msi_prediction_dataset underlying dataset TCGA used development statistical classifier target_size_mb size targeted genomic region (coding) sample_name name sample","code":""},{"path":"https://umccr.github.io/pcgr/reference/predict_msi_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"msi_data","code":""},{"path":"https://umccr.github.io/pcgr/reference/qc_var_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","title":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","text":"Function makes quality control check evidence items assigned variants","code":""},{"path":"https://umccr.github.io/pcgr/reference/qc_var_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","text":"","code":"qc_var_eitems(var_eitems = NULL, marker_type = \"codon\")"},{"path":"https://umccr.github.io/pcgr/reference/qc_var_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","text":"var_eitems variant-evidence items marker_type type biomarker","code":""},{"path":"https://umccr.github.io/pcgr/reference/recode_logical_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","title":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","text":"Function assigns proper logical values logical entries read VCF file (TRUE = True (VCF), FALSE = False (VCF))","code":""},{"path":"https://umccr.github.io/pcgr/reference/recode_logical_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","text":"","code":"recode_logical_vars(vcf_data_df)"},{"path":"https://umccr.github.io/pcgr/reference/recode_logical_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","text":"vcf_data_df variant data frame","code":""},{"path":"https://umccr.github.io/pcgr/reference/remove_cols_from_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes column(s) from data frame — remove_cols_from_df","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"Function removes column(s) data frame","code":""},{"path":"https://umccr.github.io/pcgr/reference/remove_cols_from_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"","code":"remove_cols_from_df(df, cnames = NULL)"},{"path":"https://umccr.github.io/pcgr/reference/remove_cols_from_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"df data.frame data cnames character vector column names","code":""},{"path":"https://umccr.github.io/pcgr/reference/remove_cols_from_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"df data.frame columns removed (present originally)","code":""},{"path":"https://umccr.github.io/pcgr/reference/retrieve_secondary_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves variants in genes recommended for secondary\n(secondary) findings — retrieve_secondary_calls","title":"Function that retrieves variants in genes recommended for secondary\n(secondary) findings — retrieve_secondary_calls","text":"Function retrieves variants genes recommended secondary (secondary) findings","code":""},{"path":"https://umccr.github.io/pcgr/reference/retrieve_secondary_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves variants in genes recommended for secondary\n(secondary) findings — retrieve_secondary_calls","text":"","code":"retrieve_secondary_calls(calls, umls_map)"},{"path":"https://umccr.github.io/pcgr/reference/retrieve_secondary_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves variants in genes recommended for secondary\n(secondary) findings — retrieve_secondary_calls","text":"calls data frame variants genes recommended secondary findings reporting umls_map data frame UMLS phenotype terms","code":""},{"path":"https://umccr.github.io/pcgr/reference/set_report_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that set PCGR report metadata — set_report_metadata","title":"Function that set PCGR report metadata — set_report_metadata","text":"Function set PCGR report metadata","code":""},{"path":"https://umccr.github.io/pcgr/reference/set_report_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that set PCGR report metadata — set_report_metadata","text":"","code":"set_report_metadata(   config,   pcgr_data,   virtual_panel_id = \"-1\",   report_type = NULL,   custom_bed = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/set_report_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that set PCGR report metadata — set_report_metadata","text":"config PCGR config object pcgr_data PCGR data list object virtual_panel_id identifier virtual panel report_type type report ('germline' 'somatic') custom_bed custom BED file target loci screening","code":""},{"path":"https://umccr.github.io/pcgr/reference/set_report_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that set PCGR report metadata — set_report_metadata","text":"report_metadata Object PCGR report metadata","code":""},{"path":"https://umccr.github.io/pcgr/reference/sort_chromosomal_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"Function sorts chromosomal segments according chromosome chromosomal start/end position","code":""},{"path":"https://umccr.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"","code":"sort_chromosomal_segments(   df,   chromosome_column = \"CHROM\",   start_segment = \"POS\",   end_segment = \"POS\" )"},{"path":"https://umccr.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"df data frame chromosome start + end segment chromosome_column name column chromosome name sigven start_segment name column indicates start chromosomal segment end_segment name column indicates end chromosomal segment","code":""},{"path":"https://umccr.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"df_final data frame sorted chromosomal segments","code":""},{"path":"https://umccr.github.io/pcgr/reference/structure_var_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","title":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","text":"Function structures variant evidence items according strength evidence","code":""},{"path":"https://umccr.github.io/pcgr/reference/structure_var_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","text":"","code":"structure_var_eitems(var_eitems, annotation_tags, alteration_type = \"MUT\")"},{"path":"https://umccr.github.io/pcgr/reference/structure_var_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","text":"var_eitems variant evidence items annotation_tags annotation tags include display alteration_type type alteration ('MUT','CNA')","code":""},{"path":"https://umccr.github.io/pcgr/reference/summary_donut_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a piechart showing the number of variants at\neach significance level — summary_donut_chart","title":"Function that makes a piechart showing the number of variants at\neach significance level — summary_donut_chart","text":"Function makes piechart showing number variants significance level","code":""},{"path":"https://umccr.github.io/pcgr/reference/summary_donut_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a piechart showing the number of variants at\neach significance level — summary_donut_chart","text":"","code":"summary_donut_chart(variants_tsv, plot_type = \"ClinVar\")"},{"path":"https://umccr.github.io/pcgr/reference/summary_donut_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a piechart showing the number of variants at\neach significance level — summary_donut_chart","text":"variants_tsv data frame variants predisposition_genes plot_type ClinVar ","code":""},{"path":"https://umccr.github.io/pcgr/reference/targeted_drugs_pr_ttype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","title":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","text":"Function retrieves targeted drugs given tumor type/primary site","code":""},{"path":"https://umccr.github.io/pcgr/reference/targeted_drugs_pr_ttype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","text":"","code":"targeted_drugs_pr_ttype(ttype, pcgr_data, ignore_on_label_early_phase = T)"},{"path":"https://umccr.github.io/pcgr/reference/targeted_drugs_pr_ttype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","text":"ttype primary site/tumor type pcgr_data PCGR data object ignore_on_label_early_phase ignore early phase drugs (label)","code":""},{"path":"https://umccr.github.io/pcgr/reference/targeted_drugs_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","title":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","text":"Function summarises available targeted drugs given target","code":""},{"path":"https://umccr.github.io/pcgr/reference/targeted_drugs_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","text":"","code":"targeted_drugs_summarise(   candidate_drugs = NULL,   link_label = \"DRUGS_ON_LABEL\",   indication_label = \"DRUGS_ON_LABEL_INDICATIONS\" )"},{"path":"https://umccr.github.io/pcgr/reference/targeted_drugs_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","text":"candidate_drugs data frame candidate drugs link_label column name list aggregated drugs pr. target indication_label column name drug indications","code":""},{"path":"https://umccr.github.io/pcgr/reference/tcga_somatic_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"Function assigns logical (STATUS_TCGA_SOMATIC) reflecting whether variant co-incides entry TCGA (somatic)","code":""},{"path":"https://umccr.github.io/pcgr/reference/tcga_somatic_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"","code":"tcga_somatic_status(sample_calls)"},{"path":"https://umccr.github.io/pcgr/reference/tcga_somatic_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://umccr.github.io/pcgr/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html","code":""},{"path":"https://umccr.github.io/pcgr/reference/tier_af_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"Function plots histogram variant allelic support (tumor) - grouped tiers","code":""},{"path":"https://umccr.github.io/pcgr/reference/tier_af_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"","code":"tier_af_distribution(tier_df, bin_size = 0.1)"},{"path":"https://umccr.github.io/pcgr/reference/tier_af_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"tier_df data frame somatic mutations bin_size size bins allelic frequency","code":""},{"path":"https://umccr.github.io/pcgr/reference/tier_af_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"p geom_histogram plot ggplot2","code":""},{"path":"https://umccr.github.io/pcgr/reference/update_maf_allelic_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","title":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","text":"Function updates MAF file (produced vcf2maf) allelic support data","code":""},{"path":"https://umccr.github.io/pcgr/reference/update_maf_allelic_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","text":"","code":"update_maf_allelic_support(calls, maf_fname_tmp, maf_fname, delete_raw = T)"},{"path":"https://umccr.github.io/pcgr/reference/update_maf_allelic_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","text":"calls data frame variant calls maf_fname_tmp Filename MAF produced vcf2maf maf_fname Filename MAF includes variant allelic support (final MAF) delete_raw logical indicating initial MAF deleted","code":""},{"path":"https://umccr.github.io/pcgr/reference/update_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initates PCGR report object — update_report","title":"Function that initates PCGR report object — update_report","text":"Function initates PCGR report object","code":""},{"path":"https://umccr.github.io/pcgr/reference/update_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initates PCGR report object — update_report","text":"","code":"update_report(report, report_data, a_elem = \"snv_indel\")"},{"path":"https://umccr.github.io/pcgr/reference/update_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initates PCGR report object — update_report","text":"report PCGR final report report_data Object PCGR report data a_elem section PCGR report","code":""},{"path":"https://umccr.github.io/pcgr/reference/upset_plot_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"Function makes upset calls germline-filtered variants classification procedure","code":""},{"path":"https://umccr.github.io/pcgr/reference/upset_plot_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"","code":"upset_plot_tumor_only(upset_data)"},{"path":"https://umccr.github.io/pcgr/reference/upset_plot_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"upset_data unfiltered calls (germline + somatic)","code":""},{"path":"https://umccr.github.io/pcgr/reference/upset_plot_tumor_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"p","code":""},{"path":"https://umccr.github.io/pcgr/reference/variant_db_url.html","id":null,"dir":"Reference","previous_headings":"","what":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"List URLS variant identifiers variant/gene/protein domain databases","code":""},{"path":"https://umccr.github.io/pcgr/reference/variant_db_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"","code":"variant_db_url"},{"path":"https://umccr.github.io/pcgr/reference/variant_db_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"data.frame 6 rows 5 columns indicates URL's various variant/gene databases use PCGR annotation columns generate variant links name - Name encoding variant/gene database group_by_var - column used grouping url_prefix - URL prefix link_key_var - column used key value link link_display_var - column used display variable link","code":""},{"path":"https://umccr.github.io/pcgr/reference/variant_stats_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","title":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","text":"Function generate snv/indel + coding/noncoding stats given variant set","code":""},{"path":"https://umccr.github.io/pcgr/reference/variant_stats_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","text":"","code":"variant_stats_report(calls, name = \"v_stat\")"},{"path":"https://umccr.github.io/pcgr/reference/variant_stats_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","text":"calls data frame variants predisposition_genes name type variant group","code":""},{"path":"https://umccr.github.io/pcgr/reference/virtual_panel_display_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","title":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","text":"Function makes HTML display virtual gene panel","code":""},{"path":"https://umccr.github.io/pcgr/reference/virtual_panel_display_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","text":"","code":"virtual_panel_display_html(gene_df)"},{"path":"https://umccr.github.io/pcgr/reference/virtual_panel_display_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","text":"gene_df data frame genes targeted virtual panel","code":""},{"path":"https://umccr.github.io/pcgr/reference/write_processed_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"Function writes VCF intended mutational signature analysis","code":""},{"path":"https://umccr.github.io/pcgr/reference/write_processed_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"","code":"write_processed_vcf(   calls,   sample_name = NULL,   output_directory = NULL,   vcf_fname = NULL )"},{"path":"https://umccr.github.io/pcgr/reference/write_processed_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"calls data frame calls sample_name sample name output_directory Output directory output file vcf_fname filename VCF","code":""},{"path":"https://umccr.github.io/pcgr/reference/write_report_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","title":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","text":"Function writes contents PCGR object various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc)","code":""},{"path":"https://umccr.github.io/pcgr/reference/write_report_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","text":"","code":"write_report_output(   report,   config,   tier_model = \"pcgr_acmg\",   output_format = \"html\",   flexdb = F )"},{"path":"https://umccr.github.io/pcgr/reference/write_report_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","text":"report List object report data (PCGR/CPSR) config Configuration object key configurations (directories, sample names, genome assembly etc) tier_model type tier model output_format contents/file format output (html/json/tsv/cna_tsv etc) flexdb logical indicating HTML output dashboard","code":""}]
